/****************************************************************************
 *
 *   Copyright (C) 2013-2016 PX4 Development Team. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in
 *    the documentation and/or other materials provided with the
 *    distribution.
 * 3. Neither the name PX4 nor the names of its contributors may be
 *    used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
 * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
 * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
 * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
 * OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
 * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
 * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 *
 ****************************************************************************/

/* Auto-generated by genmsg_cpp from file msg/sensor_combined.msg */


#include <px4_config.h>
#include <drivers/drv_orb_dev.h>
#include <uORB/topics/sensor_combined.h>


const char *__orb_sensor_combined_fields = "SENSOR_COMBINED:uint64_t[3] gyro_timestamp;uint64_t[3] gyro_integral_dt;uint64_t[3] accelerometer_integral_dt;uint64_t[3] accelerometer_timestamp;uint64_t[3] magnetometer_timestamp;uint64_t[3] baro_timestamp;uint64_t[3] differential_pressure_timestamp;float[9] gyro_rad_s;uint32_t[3] gyro_priority;float[9] gyro_integral_rad;uint32_t[3] gyro_errcount;float[3] gyro_temp;float[9] accelerometer_m_s2;float[9] accelerometer_integral_m_s;float[3] accelerometer_range_m_s2;uint32_t[3] accelerometer_priority;uint32_t[3] accelerometer_errcount;float[3] accelerometer_temp;float[9] magnetometer_ga;float[3] magnetometer_range_ga;float[3] magnetometer_cuttoff_freq_hz;uint32_t[3] magnetometer_priority;uint32_t[3] magnetometer_errcount;float[3] magnetometer_temp;float[3] baro_pres_mbar;float[3] baro_alt_meter;float[3] baro_temp_celcius;uint32_t[3] baro_priority;uint32_t[3] baro_errcount;float[10] adc_voltage_v;float mcu_temp_celcius;float[3] differential_pressure_pa;float[3] differential_pressure_filtered_pa;uint32_t[3] differential_pressure_priority;uint32_t[3] differential_pressure_errcount;int16_t[9] gyro_raw;int16_t[9] accelerometer_raw;int16_t[3] accelerometer_mode;int16_t[9] magnetometer_raw;int16_t[3] magnetometer_mode;uint16_t[10] adc_mapping;uint8_t[6] _padding0;";

ORB_DEFINE(sensor_combined, struct sensor_combined_s, 738,
    __orb_sensor_combined_fields);

